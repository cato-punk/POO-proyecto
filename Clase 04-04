¿Cuantos metodo debe tener la clase? Los que la definan
Modelado ver que clases heredan , encapsulan, polimorfismo
trabajar con public private vacio

Estrcutura comun de todos los proyectos:
  interfaz(graficas de usuario) Guis >>Las pantallas
  ordenar las clases
  todos los proyectos respetan (packages:modelo,problema, logica) ¿que debiera haber dentro del paquete? solo las clases que competen  (packages:datos)(pakcages:inicialzador)(package:guis)
  crear realciones de dependencia entre los paquetes
  uso de arreglos de objetos , acceder a ellos solo te den la id de memoria(donde estan)


TDD casos de prueba , asimilar que va a fallar,y poder modificar reconociendo donde esta la falla, y llevandolo a produccion

The ilties: caractersticas que no tienen que ver con que hace el sistema y el como lo hace.
  learnability
  portability  (ej; spotify)
  security
  usability
  Maintainability
  Scalability
  Availability
  Extensibility


Proxima semana Taller de metodos
primer uso tratar de probarlos
que se va a usar
JUnit.org
